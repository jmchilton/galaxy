# the default configuration
- type: tool_shed_packages
  # first look for dependencies installed from the toolshed
- type: galaxy_packages
  # then look for env.sh files in directories according to the "galaxy packages" schema.
  # These resolvers can take a base_path attribute to specify where to look for
  # package definitions, but by default look in the directory specified by tool_dependency_dir
  # in Galaxy's config/galaxy.ini
- type: conda
  # check whether the correct tool requirement version has been installed via conda
- type: galaxy_packages
  versionless: true
  # look for a "default" symlink pointing to a directory containing an
  # env.sh file for the package in the "galaxy packages" schema
- type: conda
  versionless: true
  # finall look for any version of the dependency installed via conda -->

# Other available options...

# - type: lmod
# - type: lmode
#   versionless: true
# # LMOD dependency resolver (For the LMOD environment modules system - https://github.com/TACC/Lmod)
# # The LMOD dependency resolver attributes are:
# #  * lmodexec - Path to the lmod executable on your system - Default: value of the "LMOD_CMD" environment variable
# #  * settargexec - Path to the settarg executable on your system - Default: value of the "LMOD_SETTARG_CMD" environment variable
# #  * modulepath - Path to the folder that contains the LMOD module files on your system - Default: value of the "MODULEPATH" environment variable
# #  * versionless - Set it to true to resolve a dependency based on its name only (the version number is ignored) - Default: false
# #  * mapping_files - Path to a Yaml configuration file that can be used to link tools requirements with existing LMOD modules - Default: config/lmod_modules_mapping.yml
# #  Important notes:
# #  - All the above attributes are optional
# #  - The value of the lmodexec attribute can't just be "module" because module is actually a bash function and not the real LMOD binary (see the result of the "type module" command)
# #  - The value of the modulepath attribute can also be a semicolon separated list of path
# #  - In versionless mode, only modules marked as Default will be listed by the "avail" command (The -d option is used)
# #  - If the config folder of your Galaxy instance contains a file called "lmod_modules_mapping.yml" (based on the lmod_modules_mapping.yml.sample file) it will be taken into consideration automatically

# type: modules
#  modulecmd: opt/Modules/3.2.9/bin/modulecmd
# type: modules
# modulecmd: /opt/Modules/3.2.9/bin/modulecmd
# versionless: true
# default_indicator: default

# # Environment modules dependency resolver.
# # Attributes are:
# # * modulecmd - path to modulecmd
# # * versionless - default: false - whether to resolve tools using a version number or not
# # * find_by - directory or avail - use the DirectoryModuleChecker or AvailModuleChecker
# # * prefetch - default: true - in the AvailModuleChecker prefetch module info with 'module avail'
# # * default_indicator - default: '(default)' - what indicate to the AvailModuleChecker that a module is the default version

# Experimental (likely broken) resolvers
# type: tool_shed_tap
# type: homebrew
