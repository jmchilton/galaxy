<tool id="gx_conditional_boolean_discriminate_on_string_value" name="gx_conditional_boolean_discriminate_on_string_value" version="1.0.0">
    <command><![CDATA[
echo 'test: $conditional_parameter.test_parameter' >> '$output'
    ]]></command>
    <inputs>
        <conditional name="conditional_parameter">
            <param name="test_parameter" type="boolean" truevalue="a_value_that_is_t" falsevalue="a_value_that_is_f"  />
            <when value="a_value_that_is_t">
                <param name="integer_parameter" type="integer" value="1" />
            </when>
            <when value="a_value_that_is_f">
                <param name="boolean_parameter" type="boolean" />
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="output" format="txt" />
    </outputs>
    <tests>
        <test>
            <output name="output">
                <assert_contents>
                    <has_line line="test: a_value_that_is_f" />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="test_parameter" value="true" />
            <output name="output">
                <assert_contents>
                    <has_line line="test: a_value_that_is_t" />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="test_parameter" value_json="false" />
            <output name="output">
                <assert_contents>
                    <has_line line="test: a_value_that_is_f" />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="test_parameter" value_json="true" />
            <output name="output">
                <assert_contents>
                    <has_line line="test: a_value_that_is_t" />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="test_parameter" value="a_value_that_is_t" />
            <output name="output">
                <assert_contents>
                    <has_line line="test: a_value_that_is_t" />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="test_parameter" value="a_value_that_is_f" />
            <output name="output">
                <assert_contents>
                    <has_line line="test: a_value_that_is_f" />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="test_parameter" value="True" />
            <output name="output">
                <assert_contents>
                    <has_line line="test: a_value_that_is_t" />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="test_parameter" value="False" />
            <output name="output">
                <assert_contents>
                    <has_line line="test: a_value_that_is_f" />
                </assert_contents>
            </output>
        </test>
    </tests>
</tool>
